@page "/getstudentbyschool"
@inject StudentService studentService
@using ServerSide.Models
@using Microsoft.AspNetCore.Components.Forms

<PageTitle>Get Students</PageTitle>

<EditForm Model="@formData" OnValidSubmit="Submit" FormName="Form">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <!-- School selection dropdown -->
    <div class="form-group">
        <label for="selectedSchool">Select a School</label>
        <InputSelect @bind-Value="school">
            @if (schools != null)
            {
                @foreach (var school in schools)
                {
                    <option value="Mining">@school</option>
                }
            }
        </InputSelect>
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Submit</button>
    </div>

</EditForm>

<!-- Display selected school -->
@if (formData.SelectedSchool != null)
{
    <p>You have selected: @formData.SelectedSchool</p>
}

<!-- Display students if available -->
@if (students == null) {
  <p><em>Loading...</em></p>
} else {
  <table class='table table-hover'>
    <thead>
      <tr>
        <th>ID</th>
        <th>First Name</th>
        <th>Last Name</th>
        <th>School</th>
        <th></th>
        <th></th>
      </tr>
    </thead>
    <tbody>
      @foreach (var item in students)
      {
        <tr>
          <td>@item.StudentId</td>
          <td>@item.FirstName</td>
          <td>@item.LastName</td>
          <td>@item.School</td>
        </tr>
        }
    </tbody>
  </table>
}


@code {
    private List<string>? schools;
    private List<ServerSide.Models.Student>? students;
    private FormData formData = new FormData();

    private string? school;


    protected override async Task OnInitializedAsync()
    {
        schools = await studentService.GetSchoolsAsync();
    }

    private async Task Submit() {
        students = await studentService.GetStudentsBySchoolAsync(school!);
    }
}

